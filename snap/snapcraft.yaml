name: floorp
base: core22
adopt-info: floorp
summary: Floorp Browser
description: |
  Floorp is the most sophisticated, unlimitedly customizable and unsupervised web browser in the Firefox derivation. This snap repackages the upstream Linux tarball.
grade: stable
confinement: strict
assumes:
  - snapd2.54
compression: lzo
icon: snap/gui/floorp.png

apps:
  floorp:
    command: bin/floorp-launch
    desktop: snap/gui/floorp.desktop
    extensions: [gnome]
    environment:
      DICPATH: "$SNAP/usr/share/hunspell:$SNAP_COMMON/snap-hunspell"
      GTK_USE_PORTAL: 1
      HOME: "$SNAP_USER_COMMON"
      PIPEWIRE_CONFIG_NAME: "$SNAP/usr/share/pipewire/pipewire.conf"
      PIPEWIRE_MODULE_DIR: "$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/pipewire-0.3"
      SPA_PLUGIN_DIR: "$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/spa-0.2"
      SPEECHD_ADDRESS: "unix_socket:/run/user/$SNAP_UID/speech-dispatcher/speechd.sock"
    # Provide slots correctly
    slots:
      - floorp-dbus
      - floorp-mpris
    plugs:
      - browser-support
      - alsa
      - audio-playback
      - audio-record
      - avahi-observe
      - camera
      - cups-control
      - gsettings
      - hardware-observe
      - home
      - joystick
      - login-session-observe
      - mount-observe
      - network
      - network-observe
      - opengl
      - pcscd
      - removable-media
      - screen-inhibit-control
      - system-packages-doc
      - u2f-devices
      - upower-observe
      - wayland
      - x11
      - desktop
      - desktop-legacy
      - pulseaudio

# Proper interface *definitions* for the slots above
slots:
  floorp-dbus:
    interface: dbus
    bus: session
    name: app.floorp.Floorp
  floorp-mpris:
    interface: mpris
    name: floorp

parts:
  floorp:
    plugin: nil
    source: .
    build-packages:
      - execstack
      - binutils
      - wget
      - curl
      - libunistring-dev
    stage-packages:
      - libgtk-3-0
      - libglib2.0-0
      - libnss3
      - libasound2
      - libdbus-1-3
      - libx11-6
      - libxrandr2
      - libxss1
      - libxtst6
      - libgdk-pixbuf-2.0-0
      - libdrm2
      - libxdamage1
      - libxcomposite1
      - libxfixes3
      - libxshmfence1
      - zlib1g
      - ca-certificates
      - fontconfig
      - speech-dispatcher
      - libspeechd2
      - libdotconf0
      - libfido2-1
      - libpcsclite1
      # ship at least one dictionary so spellcheck works without host access
      - hunspell-en-us

    override-pull: |
      set -eu
      mkdir -p fetched snap/gui

      # Ensure desktop file exists before metadata generation
      cat > snap/gui/floorp.desktop << 'EOF'
      [Desktop Entry]
      Name=Floorp
      Comment=Browse the Web
      Exec=floorp %U
      Icon=${SNAP}/meta/gui/floorp.png
      Terminal=false
      Type=Application
      Categories=Network;WebBrowser;
      MimeType=text/html;x-scheme-handler/http;x-scheme-handler/https;
      StartupWMClass=Floorp
      EOF
      sed -i 's/\r$//' snap/gui/floorp.desktop

      if [ -f ../build/SRC_TAR ] && [ -s ../build/SRC_TAR ]; then
        TAR="$(cat ../build/SRC_TAR)"
        [ -f "$TAR" ] || { echo "Missing tarball: $TAR"; exit 1; }
        cp "$TAR" fetched/floorp.tar.xz
        if [ -f ../build/VERSION ]; then
          VERSION="$(cat ../build/VERSION)"
        else
          VERSION="$(basename "$TAR" | sed -nE 's/[^0-9]*([0-9]+\.[0-9]+(\.[0-9]+)?).*/\1/p')"
        fi
        echo "Using tar from Makefile: $TAR (version $VERSION)"
      else
        echo "No pre-fetched tarball found; auto-fetching..."

        ARCH="$CRAFT_TARGET_ARCH"
        case "$ARCH" in
          amd64) archpat='amd64' ;;
          arm64) archpat='aarch64' ;;
          *) echo "Unsupported arch: $ARCH"; exit 1 ;;
        esac

        API_URL="https://api.github.com/repos/Floorp-Projects/Floorp/releases/latest"
        echo "Fetching release info from $API_URL..."
        JSON="$(curl -sSfL "$API_URL")"

        TAG=$(echo "$JSON" | grep -m1 '"tag_name":' | sed -E 's/.*"tag_name": *"([^"]+)".*/\1/')
        [ -n "$TAG" ] || { echo "Failed to parse tag from GitHub API response."; exit 1; }
        TAG="${TAG#v}"

        URL_GH=$(echo "$JSON" | grep -o '"browser_download_url": *"[^"]*"' | cut -d'"' -f4 | grep -i "linux.*$archpat.*\.tar\.xz$" | head -n1)
        [ -n "$URL_GH" ] || { echo "Failed to find a suitable download URL for $archpat."; exit 1; }

        curl -sSfL "$URL_GH" -o fetched/floorp.tar.xz
        VERSION="$TAG"
      fi

      craftctl set version="$VERSION"

    override-build: |
      set -eu
      install -d "$CRAFT_PART_INSTALL/opt/floorp" "$CRAFT_PART_INSTALL/bin" "$CRAFT_PART_INSTALL/snap/gui"

      tar -xf fetched/floorp.tar.xz -C "$CRAFT_PART_INSTALL/opt/floorp" --strip-components=1

      # Clear executable stack flags on any .so
      if command -v execstack >/dev/null 2>&1; then
        echo "Scanning for executable-stack libraries..."
        while IFS= read -r -d '' f; do
          if execstack -q "$f" 2>/dev/null | grep -q '^X'; then
            echo "Clearing execstack: $f"
            execstack -c "$f"
          fi
        done < <(find "$CRAFT_PART_INSTALL/opt/floorp" -type f -name '*.so*' -print0)
      fi

      # Launcher
      cat > "$CRAFT_PART_INSTALL/bin/floorp-launch" << 'EOF'
      #!/bin/sh
      exec "$SNAP/opt/floorp/floorp" "$@"
      EOF
      chmod 755 "$CRAFT_PART_INSTALL/bin/floorp-launch"

    stage:
      - opt/floorp/**
      - bin/floorp-launch
      - snap/gui/floorp.desktop
    prime:
      - opt/floorp/**
      - bin/floorp-launch
      - snap/gui/floorp.desktop
